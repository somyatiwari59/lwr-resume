import { Command } from 'commander';
import chalk from 'chalk';
import { logger } from '@lwrjs/shared-utils';
import { getModeOption, getPortOption, launch } from '../utils.js';
export function createDevCommand() {
    return new Command('dev')
        .description('Starts an LWR server (defaults to dev mode)')
        .addOption(getPortOption())
        .addOption(getModeOption().default('dev'))
        .option('-o, --open', `[boolean] open browser on startup`, false)
        .action(async (options, cmd) => {
        const { createServer } = await import('@lwrjs/core');
        const { port, mode, rootDir, config, open } = cmd.optsWithGlobals();
        try {
            const server = createServer({ port, serverMode: mode, rootDir, lwrConfigFile: config });
            await server.listen(async ({ serverMode, port }) => {
                console.log(chalk.green(`Running LWR at: http://localhost:${port} | mode: ${serverMode}`));
                if (open) {
                    await launch(port);
                }
            });
        }
        catch (error) {
            logger.error(error);
            process.exit(1);
        }
    });
}
//# sourceMappingURL=dev.js.map