/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved
Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */

:host([data-render-mode="shadow"]:focus) {
  outline: 0;
}

:host([data-render-mode="shadow"]) [part~='button'] {
  display: inline-flex;
  position: relative;
  background: none;
  background-color: var(--sds-c-button-color-background, var(--sds-s-button-color-background, transparent));
  background-clip: border-box;
  color: var(--sds-c-button-text-color, var(--sds-s-button-text-color, inherit));
  padding-left: var(
    --sds-c-button-spacing-inline-start,
    var(--sds-c-button-spacing-inline, var(--sds-s-button-spacing-inline))
  );
  padding-right: var(
    --sds-c-button-spacing-inline-end,
    var(--sds-c-button-spacing-inline, var(--sds-s-button-spacing-inline))
  );
  padding-top: var(
    --sds-c-button-spacing-block-start,
    var(--sds-c-button-spacing-block, var(--sds-s-button-spacing-block))
  );
  padding-bottom: var(
    --sds-c-button-spacing-block-start,
    var(--sds-c-button-spacing-block, var(--sds-s-button-spacing-block))
  );
  border-width: var(--sds-c-button-sizing-border, var(--sds-s-button-sizing-border, 1px));
  border-style: solid;
  border-color: var(--sds-c-button-color-border, var(--sds-s-button-color-border, transparent));
  border-start-start-radius: var(
    --sds-c-button-radius-border-startstart,
    var(
      --sds-c-button-radius-border,
      var(
        --sds-s-button-radius-border-startstart,
        var(--sds-s-button-radius-border, var(--sds-g-radius-border-2, 0.25rem))
      )
    )
  );
  border-start-end-radius: var(
    --sds-c-button-radius-border-startend,
    var(
      --sds-c-button-radius-border,
      var(
        --sds-s-button-radius-border-startend,
        var(--sds-s-button-radius-border, var(--sds-g-radius-border-2, 0.25rem))
      )
    )
  );
  border-end-start-radius: var(
    --sds-c-button-radius-border-endstart,
    var(
      --sds-c-button-radius-border,
      var(
        --sds-s-button-radius-border-endstart,
        var(--sds-s-button-radius-border, var(--sds-g-radius-border-2, 0.25rem))
      )
    )
  );
  border-end-end-radius: var(
    --sds-c-button-radius-border-endend,
    var(
      --sds-c-button-radius-border,
      var(
        --sds-s-button-radius-border-endend,
        var(--sds-s-button-radius-border, var(--sds-g-radius-border-2, 0.25rem))
      )
    )
  );
  box-shadow: var(--sds-c-button-shadow, var(--sds-s-button-shadow));
  width: var(--sds-c-button-sizing-width);

  /* this line height hook is incorrect but is used in core - need to get teams to change */
  /* stylelint-disable-next-line sds-stylelint-plugin/styling-hooks-pattern */
  line-height: var(--sds-c-button-line-height);
  white-space: normal;
  user-select: none;
  align-items: center;
  text-decoration: var(--sds-c-button-font-decoration, none);
  appearance: none;
}

:host([data-render-mode="shadow"]) [part~='button']:hover {
  --sds-c-button-text-color: var(
    --sds-c-button-text-color-hover,
    var(--sds-s-button-text-color-hover, #0176d3)
  );
  --sds-c-button-color-background: var(
    --sds-c-button-color-background-hover,
    var(--sds-s-button-color-background-hover)
  );
  --sds-c-button-color-border: var(--sds-c-button-color-border-hover, var(--sds-s-button-color-border-hover));

  cursor: pointer;
}

:host([data-render-mode="shadow"]) [part~='button']:focus {
  --sds-c-button-color-background: var(
    --sds-c-button-color-background-focus,
    var(--sds-s-button-color-background-focus)
  );
  --sds-c-button-color-border: var(
    --sds-c-button-color-border-focus,
    var(--sds-s-button-color-border-focus, #0176d3)
  );
  --sds-c-button-text-color: var(
    --sds-c-button-text-color-focus,
    var(--sds-s-button-text-color-focus, #0176d3)
  );
  --sds-c-button-shadow: var(--sds-c-button-shadow-focus, var(--sds-s-button-shadow-focus, #0176d3 0 0 3px));

  outline: 0;
}

:host([data-render-mode="shadow"]) [part~='button']:active {
  --sds-c-button-text-color: var(
    --sds-c-button-text-color-active,
    var(--sds-s-button-text-color-active, currentColor)
  );
  --sds-c-button-color-background: var(
    --sds-c-button-color-background-active,
    var(--sds-s-button-color-background-active)
  );
  --sds-c-button-color-border: var(
    --sds-c-button-color-border-active,
    var(--sds-s-button-color-border-active, #0176d3)
  );
}

:host([data-render-mode="shadow"]) [part~='button']:disabled {
  --sds-c-button-text-color: var(--sds-c-button-text-color-disabled, #939393);
  --sds-c-button-color-background: var(--sds-c-button-color-background-disabled);
  --sds-c-button-color-border: var(--sds-c-button-color-border-disabled);

  pointer-events: none;
}

:host([data-render-mode="shadow"]) [part~='button']:disabled * {
  pointer-events: none;
}

/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved
  Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */

:host([data-render-mode="shadow"]) {
  /**
   * Establish independent formatting context, we don't want ancestor rules affecting our layout.
   * This assumes there will not be a direct, child inline-level element.
   * See https://www.w3.org/TR/css-display-3/#establish-an-independent-formatting-context
   */
  display: inline-flex;
}

:host([data-render-mode="shadow"]) [part~='boundary'] {
  padding-block-start: var(--sds-c-icon-spacing-block-start, var(--sds-c-icon-spacing));
  padding-block-end: var(--sds-c-icon-spacing-block-end, var(--sds-c-icon-spacing));
  padding-inline-start: var(--sds-c-icon-spacing-inline-start, var(--sds-c-icon-spacing));
  padding-inline-end: var(--sds-c-icon-spacing-inline-end, var(--sds-c-icon-spacing));
  border-radius: var(--sds-c-icon-radius-border);
  border-width: var(--sds-c-icon-sizing-border, 1px);
  border-style: solid;
  border-color: var(--sds-c-icon-color-border, transparent);
  background-color: var(--sds-c-icon-color-background);
}

:host([data-render-mode="shadow"]) [part~='icon'] {
  display: flex; /* See line #5 */
  height: var(--sds-c-icon-sizing-height, var(--sds-c-icon-sizing));
  width: var(--sds-c-icon-sizing-width, var(--sds-c-icon-sizing));
  color: var(--sds-c-icon-color-foreground);
}

/**
 * Normalize svgs and control width/height with Styling Hooks
 */

:host([data-render-mode="shadow"]) svg {
  width: 100%;
  height: 100%;
}

/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved
  Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */

@supports (--styling-hooks: '') {
  /**
   * LBC default is the 'neutral' variant.
   *
   * We retain the 'neutral' variant in the hook names for interoperability
   * with SLDS light DOM blueprints which do explicitly define a 'neutral'
   * variant which is not the default.
   *
   * See 'base' variant below.
   *
   */

  :host([data-render-mode="shadow"]) [part~='button'] {
    /* Element spacing, display flex set by SDS button */
    gap: var(--sds-g-spacing-2, 0.5rem);

    /* slds-icon mapping */
    --slds-c-icon-sizing-border: 0;
    --slds-c-icon-sizing: 0.875rem;
    --slds-c-icon-color-foreground: var(--slds-c-button-icon-color-foreground, currentcolor);

    --sds-c-button-line-height: var(
      --slds-c-button-neutral-font-lineheight,
      var(--slds-s-button-font-lineheight, 1.875rem)
    );
    --sds-c-button-spacing-inline: var(
      --slds-c-button-neutral-spacing-inline,
      var(--slds-s-button-spacing-inline, var(--sds-g-spacing-4, 1rem))
    );
    --sds-c-button-spacing-block: var(--slds-c-button-neutral-spacing-block);

    /**
     * A note about fallbacks on the default variant:
     *
     * We cannot use --sds-c-button-* as fallbacks because the sds-button's state
     * hooks are tied to a selector with higher specificity. In the default variant,
     * attempting to use the previous state's hook as a fallback will fail because
     * it picks up on sds-button's state hooks instead and creates an infinite loop
     * which ultimately breaks styling.
     *
     * This is another use-case for removing the opinion of state selectors in SDS.
     *
     * So in the default variant below, you'll see many repeated fallback values.
     *
     * In all other variants, it is ok to use the previous state as a fallback value.
     */

    /* Border radius - shared */
    --sds-c-button-radius-border-startstart: var(
      --slds-c-button-neutral-radius-border-startstart,
      var(
        --slds-c-button-neutral-radius-border,
        var(--slds-s-button-radius-border-startstart, var(--slds-s-button-radius-border))
      )
    );
    --sds-c-button-radius-border-endstart: var(
      --slds-c-button-radius-border-endstart,
      var(
        --slds-c-button-neutral-radius-border,
        var(--slds-s-button-radius-border-endstart, var(--slds-s-button-radius-border))
      )
    );
    --sds-c-button-radius-border-startend: var(
      --slds-c-button-radius-border-startend,
      var(
        --slds-c-button-neutral-radius-border,
        var(--slds-s-button-radius-border-startend, var(--slds-s-button-radius-border))
      )
    );
    --sds-c-button-radius-border-endend: var(
      --slds-c-button-radius-border-endend,
      var(
        --slds-c-button-neutral-radius-border,
        var(--slds-s-button-radius-border-endend, var(--slds-s-button-radius-border))
      )
    );

    /* Background color */
    --sds-c-button-color-background: var(
      --slds-c-button-neutral-color-background,
      var(--sds-g-color-neutral-base-100, #ffffff)
    );
    --sds-c-button-color-background-hover: var(
      --slds-c-button-neutral-color-background-hover,
      var(--sds-g-color-neutral-base-95, #f3f3f3)
    );
    --sds-c-button-color-background-focus: var(
      --slds-c-button-neutral-color-background-focus,
      var(--sds-c-button-color-background-hover)
    );
    --sds-c-button-color-background-active: var(
      --slds-c-button-neutral-color-background-active,
      var(--sds-g-color-neutral-base-95, #f3f3f3)
    );

    /* Border color */
    --sds-c-button-color-border: var(
      --slds-c-button-neutral-color-border,
      var(--sds-g-color-neutral-base-80, #c9c9c9)
    );
    --sds-c-button-color-border-hover: var(
      --slds-c-button-neutral-color-border-hover,
      var(--sds-g-color-neutral-base-80, #c9c9c9)
    );
    --sds-c-button-color-border-focus: var(
      --slds-c-button-neutral-color-border-focus,
      var(--sds-c-button-color-border-hover)
    );
    --sds-c-button-color-border-active: var(
      --slds-c-button-neutral-color-border-active,
      var(--sds-g-color-neutral-base-80, #c9c9c9)
      );

    /* Text color */
    --sds-c-button-text-color: var(
      --slds-c-button-neutral-text-color,
      var(--sds-g-color-brand-base-50, #0176d3)
    );
    --sds-c-button-text-color-hover: var(
      --slds-c-button-neutral-text-color-hover,
      var(--sds-g-color-brand-base-30, #014486)
    );
    --sds-c-button-text-color-focus: var(
      --slds-c-button-neutral-text-color-focus,
      var(--slds-c-button-neutral-text-color-hover)

    );
    --sds-c-button-text-color-active: var(
      --slds-c-button-neutral-text-color-active,
      var(--sds-g-color-brand-base-30, #014486)
    );

    /* Shadow */
    --sds-c-button-shadow: var(--slds-c-button-neutral-shadow);
    --sds-c-button-shadow-focus: var(--slds-c-button-neutral-shadow-focus);

    /* Disabled */
    --sds-c-button-color-background-disabled: var(
      --slds-c-button-neutral-color-background-disabled,
      var(--sds-g-color-neutral-base-100, #ffffff)
    );
    --sds-c-button-color-border-disabled: var(
      --slds-c-button-neutral-color-border-disabled,
      var(--sds-g-color-neutral-base-80, #c9c9c9)
    );
    --sds-c-button-text-color-disabled: var(
      --slds-c-button-neutral-text-color-disabled,
      var(--sds-g-color-neutral-base-80, #c9c9c9)
    );
  }

  :host([data-render-mode="shadow"][variant='brand']) [part~='button'] {
    --slds-c-button-neutral-font-lineheight: var(--slds-s-button-font-lineheight, 1.875rem);
    --slds-c-button-neutral-spacing-inline: var(--slds-s-button-spacing-inline, var(--sds-g-spacing-4, 1rem));
    --slds-c-button-neutral-color-background: var(
      --slds-c-button-brand-color-background,
      var(--sds-g-color-brand-base-50, #0176d3)
    );

    --slds-c-button-neutral-color-border: var(
      --slds-c-button-brand-color-border,
      var(--sds-g-color-brand-base-50, #0176d3)
    );

    --slds-c-button-neutral-color-border-hover: var(
      --slds-c-button-brand-color-border-hover,
      var(--sds-g-color-brand-base-40, #0b5cab)
    );
    --slds-c-button-neutral-color-border-focus: var(
      --slds-c-button-brand-color-border-focus,
      var(--slds-c-button-brand-color-border-hover)
    );
    --slds-c-button-neutral-color-border-active: var(
      --slds-c-button-brand-color-border-active,
      var(--slds-c-button-brand-color-background-active)
    );

    --slds-c-button-neutral-text-color: var(
      --slds-c-button-brand-text-color,
      var(--sds-g-color-brand-base-100, #ffffff)
    );

    --slds-c-button-neutral-color-background-hover: var(
      --slds-c-button-brand-color-background-hover,
      var(--sds-g-color-brand-base-30, #014486)
    );
    --slds-c-button-neutral-color-background-focus: var(
      --slds-c-button-brand-color-background-focus,
      var(--sds-g-color-brand-base-30, #014486)
    );
    --slds-c-button-neutral-color-background-active: var(
      --slds-c-button-brand-color-background-active,
      var(--sds-g-color-brand-base-30, #014486)
    );
    --slds-c-button-neutral-text-color-hover: var(
      --slds-c-button-brand-text-color-hover,
      var(--sds-g-color-brand-base-100, #ffffff)
    );
    --slds-c-button-neutral-text-color-active: var(
      --slds-c-button-brand-text-color-active,
      var(--sds-g-color-brand-base-100, #ffffff)
    );
    --slds-c-button-neutral-text-color-focus: var(
      --slds-c-button-brand-text-color-focus,
      var(--sds-g-color-brand-base-100, #ffffff)
    );
    --slds-c-button-neutral-color-background-disabled: var(--sds-g-color-neutral-base-80, #c9c9c9);
    --slds-c-button-neutral-color-border-disabled: var(--slds-c-button-neutral-color-background-disabled);
    --slds-c-button-neutral-text-color-disabled: var(--sds-g-color-neutral-base-100, #ffffff);
  }

  :host([data-render-mode="shadow"][variant='brand-outline']) [part~='button'] {
    --slds-c-button-neutral-font-lineheight: var(--slds-s-button-font-lineheight, 1.875rem);
    --slds-c-button-neutral-spacing-inline: var(--slds-s-button-spacing-inline, var(--sds-g-spacing-4, 1rem));
    --slds-c-button-neutral-color-background: var(--sds-g-color-neutral-base-100, #ffffff);
    --slds-c-button-neutral-color-border: var(--sds-g-color-brand-base-50, #0176d3);
    --slds-c-button-neutral-text-color: var(--sds-g-color-brand-base-40, #0b5cab);
    --slds-c-button-neutral-color-border-hover: var(--sds-g-color-brand-base-50, #0176d3);
    --slds-c-button-neutral-color-background-hover: var(--sds-g-color-neutral-base-95, #f3f3f3);
    --slds-c-button-neutral-color-background-focus: var(--sds-g-color-neutral-base-95, #f3f3f3);
    --slds-c-button-neutral-color-background-active: var(--sds-g-color-neutral-base-95, #f3f3f3);
    --slds-c-button-neutral-text-color-hover: var(--sds-g-color-brand-base-30, #014486);
    --slds-c-button-neutral-text-color-focus: var(--sds-g-color-brand-base-30, #014486);
    --slds-c-button-neutral-text-color-active: var(--sds-g-color-brand-base-30, #014486);
    --slds-c-button-neutral-color-border-disabled: var(--sds-g-color-neutral-base-80, #c9c9c9);
  }

  :host([data-render-mode="shadow"][variant='inverse']) [part~='button'] {
    --slds-c-button-neutral-font-lineheight: var(--slds-s-button-font-lineheight, 1.875rem);
    --slds-c-button-neutral-spacing-inline: var(--slds-s-button-spacing-inline, var(--sds-g-spacing-4, 1rem));
    --slds-c-button-neutral-color-background: transparent;
    --slds-c-button-neutral-color-background-hover: var(--sds-g-color-neutral-base-95, #f3f3f3);
    --slds-c-button-neutral-color-background-focus: var(--sds-g-color-neutral-base-95, #f3f3f3);
    --slds-c-button-neutral-color-background-active: var(--sds-g-color-neutral-base-95, #f3f3f3);
    --slds-c-button-neutral-color-border: var(--sds-g-color-brand-base-100, #ffffff);
    --slds-c-button-neutral-text-color: var(--sds-g-color-brand-base-100, #ffffff);
    --slds-c-button-neutral-text-color-hover: var(--sds-g-color-brand-base-50, #0176d3);
    --slds-c-button-neutral-text-color-active: var(--sds-g-color-brand-base-50, #0176d3);
    --slds-c-button-neutral-color-border-hover: var(--sds-g-color-brand-base-100, #ffffff);
    --slds-c-button-neutral-color-border-disabled: var(--sds-g-color-neutral-base-60, #939393);
    --slds-c-button-neutral-color-background-disabled: transparent;
  }

  :host([data-render-mode="shadow"][variant='destructive']) [part~='button'] {
    --slds-c-button-neutral-font-lineheight: var(--slds-s-button-font-lineheight, 1.875rem);
    --slds-c-button-neutral-spacing-inline: var(--slds-s-button-spacing-inline, var(--sds-g-spacing-4, 1rem));
    --slds-c-button-neutral-color-background: var(--sds-g-color-error-base-40, #ba0517);
    --slds-c-button-neutral-color-border: var(--sds-g-color-error-base-40, #ba0517);
    --slds-c-button-neutral-color-border-hover: var(--sds-g-color-error-base-40, #ba0517);
    --slds-c-button-neutral-text-color: var(--sds-g-color-error-base-100, #ffffff);
    --slds-c-button-neutral-color-background-hover: var(--sds-g-color-error-base-30, #8e030f);
    --slds-c-button-neutral-color-background-focus: var(--sds-g-color-error-base-30, #8e030f);
    --slds-c-button-neutral-color-background-active: var(--sds-g-color-error-base-30, #8e030f);
    --slds-c-button-neutral-text-color-hover: var(--sds-g-color-error-base-100, #ffffff);
    --slds-c-button-neutral-text-color-focus: var(--sds-g-color-error-base-100, #ffffff);
    --slds-c-button-neutral-text-color-active: var(--sds-g-color-error-base-100, #ffffff);
    --slds-c-button-neutral-color-background-disabled: var(--sds-g-color-neutral-base-80, #c9c9c9);
    --slds-c-button-neutral-color-border-disabled: var(--slds-c-button-neutral-color-background-disabled);
    --slds-c-button-neutral-text-color-disabled: var(--sds-g-color-neutral-base-100, #ffffff);
  }

  :host([data-render-mode="shadow"][variant='success']) [part~='button'] {
    --slds-c-button-neutral-font-lineheight: var(--slds-s-button-font-lineheight, 1.875rem);
    --slds-c-button-neutral-spacing-inline: var(--slds-s-button-spacing-inline, var(--sds-g-spacing-4, 1rem));
    --slds-c-button-neutral-color-background: var(--sds-g-color-success-base-70, #45c65a);
    --slds-c-button-neutral-color-border: var(--sds-g-color-success-base-80, #91db8b);
    --slds-c-button-neutral-color-border-hover: var(--sds-g-color-success-base-50, #2e844a);
    --slds-c-button-neutral-color-border-active: var(--sds-g-color-success-base-50, #2e844a);
    --slds-c-button-neutral-text-color: var(--sds-g-color-neutral-base-10, #181818);
    --slds-c-button-neutral-color-background-hover: var(--sds-g-color-success-base-50, #2e844a);
    --slds-c-button-neutral-color-background-focus: var(--sds-g-color-success-base-50, #2e844a);
    --slds-c-button-neutral-color-background-active: var(--sds-g-color-success-base-50, #2e844a);
    --slds-c-button-neutral-text-color-hover: var(--sds-g-color-success-base-100, #ffffff);
    --slds-c-button-neutral-text-color-focus: var(--sds-g-color-success-base-100, #ffffff);
    --slds-c-button-neutral-text-color-active: var(--sds-g-color-success-base-100, #ffffff);
    --slds-c-button-neutral-color-background-disabled: var(--sds-g-color-neutral-base-80, #c9c9c9);
    --slds-c-button-neutral-color-border-disabled: var(--slds-c-button-neutral-color-background-disabled);
    --slds-c-button-neutral-text-color-disabled: var(--sds-g-color-neutral-base-100, #ffffff);
  }

  :host([data-render-mode="shadow"][variant='destructive-text']) [part~='button'] {
    --slds-c-button-neutral-font-lineheight: var(--slds-s-button-font-lineheight, 1.875rem);
    --slds-c-button-neutral-spacing-inline: var(--slds-s-button-spacing-inline, var(--sds-g-spacing-4, 1rem));
    --slds-c-button-neutral-color-background: var(--sds-g-color-neutral-base-100, #ffffff);
    --slds-c-button-neutral-color-border: var(--sds-g-color-neutral-base-80, #c9c9c9);
    --slds-c-button-neutral-text-color: var(--sds-g-color-error-base-50, #ea001e);
    --slds-c-button-neutral-color-border-hover: var(--sds-g-color-neutral-base-80, #c9c9c9);
    --slds-c-button-neutral-color-background-hover: var(--sds-g-color-neutral-base-95, #f3f3f3);
    --slds-c-button-neutral-color-background-focus: var(--sds-g-color-neutral-base-95, #f3f3f3);
    --slds-c-button-neutral-color-background-active: var(--sds-g-color-neutral-base-95, #f3f3f3);
    --slds-c-button-neutral-text-color-hover: var(--sds-g-color-error-base-40, #ba0517);
    --slds-c-button-neutral-text-color-focus: var(--sds-g-color-error-base-40, #ba0517);
    --slds-c-button-neutral-text-color-active: var(--sds-g-color-error-base-40, #ba0517);
    --slds-c-button-neutral-color-border-disabled: var(--sds-g-color-neutral-base-80, #c9c9c9);
  }

  /**
   * 'base' variant is not the default in LBC. It is the default in the light
   * DOM version of SLDS.
   *
   * So even though this is a non-default variant in this context, the hooks
   * for this variant are written as the default for interoperability with
   * SLDS light DOM.
   *
   * E.g. --slds-c-button-color-background
   */
  :host([data-render-mode="shadow"][variant='base']) [part~='button'],:host([data-render-mode="shadow"][variant='text']) [part~='button'] {
    --slds-c-button-neutral-spacing-inline: var(--sds-g-spacing-1, 0.25rem);
    --slds-c-button-neutral-text-color: var(--sds-g-color-brand-base-40, #0b5cab);
    --slds-c-button-neutral-color-border: transparent;
    --slds-c-button-neutral-color-border-hover: transparent;
    --slds-c-button-neutral-color-border-focus: transparent;
    --slds-c-button-neutral-color-border-active: var(--sds-g-color-neutral-base-30, #444444);
    --slds-c-button-neutral-color-border-disabled: transparent;
    --slds-c-button-neutral-color-background-hover: transparent;
    --slds-c-button-neutral-color-background-active: transparent;
  }

  :host([data-render-mode="shadow"][stretch]) [part~='button'] {
    --sds-c-button-sizing-width: 100%;

    justify-content: center;
  }

  /**
   * Center button on all variants except 'base', and 'text'
   *
   * This addresses the issue of customers relying on preexisting x-axis centering
   * when they arbitrarily change the width of the button without the stretch variant.
   *
   * Ref
   * - https://github.com/salesforce-ux/design-system-internal/pull/4344
   * - https://github.com/salesforce-ux/design-system-internal/pull/4949
   */
  :host([data-render-mode="shadow"][variant='brand']) [part~='button'],:host([data-render-mode="shadow"][variant='brand-outline']) [part~='button'],:host([data-render-mode="shadow"][variant='inverse']) [part~='button'],:host([data-render-mode="shadow"][variant='success']) [part~='button'],:host([data-render-mode="shadow"][variant='destructive']) [part~='button'],:host([data-render-mode="shadow"][variant='destructive-text']) [part~='button'] {
    justify-content: center;
  }

  /**
   * Represents inner spacing around icon for icon-position="left", when present
   */
  :host([data-render-mode="shadow"]) [part='start'] {
    display: inline-flex;
    padding-inline-end: 0;
  }

  /**
   * Represents inner spacing around icon for icon-position="right", when present
   */
  :host([data-render-mode="shadow"]) [part='end'] {
    display: inline-flex;
    padding-inline-start: 0;
  }
}

/**
 * A temporarily baked-in utility class until SLDS gets a proper utility package.
 *
 * This is a hybrid patch between synthetic and native shadow. The ideal final
 * outcome is the removal of this class and replacing the class with the SLDS
 * utility package solution.
 */

:host([data-render-mode="shadow"]) .slds-assistive-text {
  position: absolute !important;
  margin: -1px !important;
  border: 0 !important;
  padding: 0 !important;
  width: 1px !important;
  height: 1px !important;
  overflow: hidden !important;
  clip: rect(0 0 0 0) !important;
  text-transform: none !important;
  white-space: nowrap !important;
}

:host([data-render-mode="shadow"]) .slds-button_reset {
  font-size: inherit;
  color: inherit;
  line-height: inherit;
  padding: 0;
  background: transparent;
  border: 0;
  text-align: inherit;
}

/**
 * @Note: Static fallbacks are in place until SLDS adopts SDS. Without static
 *        fallbacks, styles will regress due to invalid CSS variables from
 *        missing SLDS shared and globals.
 *
 *        Additionally, LBC are currently relying on 'part' attributes to
 *        receive styling. Authoring styles that rely on slots is not recommended.
 */

@supports (--styling-hooks: '') {
  :host([data-render-mode="shadow"][size='xxx-small']) {
    --slds-c-icon-sizing: var(--sds-g-sizing-3, 0.5rem);
  }

  :host([data-render-mode="shadow"][size='xx-small']) {
    --slds-c-icon-sizing: calc(var(--sds-g-sizing-1, 0.125rem) + var(--sds-g-sizing-4, 0.75rem));
  }

  :host([data-render-mode="shadow"][size='x-small']) {
    --slds-c-icon-sizing: var(--sds-g-sizing-5, 1rem);
  }

  :host([data-render-mode="shadow"][size='small']) {
    --slds-c-icon-sizing: var(--sds-g-sizing-7, 1.5rem);
  }

  :host([data-render-mode="shadow"][size='large']) {
    --slds-c-icon-sizing: var(--sds-g-sizing-10, 3rem);
  }

  :host([data-render-mode="shadow"][variant='warning']) {
    --slds-c-icon-color-foreground: var(--sds-g-color-warning-base-70, #fe9339);
  }

  :host([data-render-mode="shadow"][variant='success']) {
    --slds-c-icon-color-foreground: var(--sds-g-color-success-base-50, #2e844a);
  }

  :host([data-render-mode="shadow"][variant='error']) {
    --slds-c-icon-color-foreground: var(--sds-g-color-error-base-50, #ea001e);
  }

  :host([data-render-mode="shadow"][variant='light']) {
    --slds-c-icon-color-foreground: var(--sds-g-color-neutral-base-70, #aeaeae);
  }

  :host([data-render-mode="shadow"]) [part='boundary'] {
    /* --sds-c-icon-color-background: var(--slds-c-icon-color-background); */
    --sds-c-icon-radius-border: var(--slds-c-icon-radius-border, var(--sds-g-radius-border-2, 0.25rem));
    --sds-c-icon-sizing-border: var(--slds-c-icon-sizing-border);
    --sds-c-icon-color-border: var(--slds-c-icon-color-border);
    --sds-c-icon-spacing-block-start: var(
      --slds-c-icon-spacing-blockstart,
      var(--slds-c-icon-spacing-block)
    );
    --sds-c-icon-spacing-block-end: var(--slds-c-icon-spacing-blockend, var(--slds-c-icon-spacing-block));
    --sds-c-icon-spacing-inline-start: var(
      --slds-c-icon-spacing-inlinestart,
      var(--slds-c-icon-spacing-inline)
    );
    --sds-c-icon-spacing-inline-end: var(--slds-c-icon-spacing-inlineend, var(--slds-c-icon-spacing-inline));

    /**
     * There's a divergence in LBC that we have to support here: LBC splits their
     * icon implementation into two components: lightning-icon and lightning-primitive-icon.
     * slds-icon is consumed within both with no issues except that the presence of an
     * additional custom element (primitive-icon) creates an unexpected inline-level
     * element and breaks our formatting context. tl;dr, we have to reset the formatting
     * context of the boundary or else we'll inherit line-height from an ancestor and
     * get visual regressions.
     *
     * If lightning-icon is refactored into a single component, this line can be removed.
     */
    display: inline-flex;
  }

  :host([data-render-mode="shadow"]) [part='icon'] {
    --sds-c-icon-color-foreground: var(--slds-c-icon-color-foreground, var(--sds-g-color-neutral-base-100, #ffffff));
    --sds-c-icon-sizing-height: var(--slds-c-icon-sizing-height, var(--slds-c-icon-sizing, var(--sds-g-sizing-9, 2rem)));
    --sds-c-icon-sizing-width: var(--slds-c-icon-sizing-width, var(--slds-c-icon-sizing, var(--sds-g-sizing-9, 2rem)));
  }

  :host([data-render-mode="shadow"][icon-name*='action']) {
    --slds-c-icon-spacing-block: var(--sds-g-sizing-3, 0.5rem);
    --slds-c-icon-spacing-inline: var(--sds-g-sizing-3, 0.5rem);
    --slds-c-icon-radius-border: calc(var(--sds-g-radius-border-circle, 100%) / 2);
  }
}

/**
 * P R I V A T E
 *
 * The following styling is implemented by classes within the shadow DOM.
 * They're expected to be private to the component and not for external use.
 *
 * See notes for each class for the rationale behind their inclusion.
 */

/**
 * Utility icons traditionally added a class to change the default foreground
 * color (white) to a grey. This was done implicitly whereas other color changes
 * were done explicitly through the 'variant' attribute. So this is an outlier
 * to the overall pattern. Leaving it as-is since an update would require an
 * API change or more investigating.
 *
 * This is a hybrid patch between synthetic and native shadow. The ideal final
 * outcome is the removal of this class and the default utility styling would
 * be implemented through an attribute or some other class-less solution.
 */

:host([data-render-mode="shadow"]) .slds-icon-text-default {
  /*! @css-var-fallback fill */
  --slds-c-icon-color-foreground: var(
    --slds-c-icon-color-foreground-default,
    var(--sds-c-icon-color-foreground-default, var(
      --sds-g-color-neutral-base-50, #747474))
  );
}

:host([data-render-mode="shadow"]) .slds-icon-text-default.slds-is-disabled {
  fill: var(--sds-g-color-neutral-base-80, #c9c9c9);
}

/**
 * A temporarily baked-in utility class until SLDS gets a proper utility package.
 *
 * This is a hybrid patch between synthetic and native shadow. The ideal final
 * outcome is the removal of this class and replacing the class with the SLDS
 * utility package solution.
 */

:host([data-render-mode="shadow"]) .slds-assistive-text {
  position: absolute !important;
  margin: -1px !important;
  border: 0 !important;
  padding: 0 !important;
  width: 1px !important;
  height: 1px !important;
  overflow: hidden !important;
  clip: rect(0 0 0 0) !important;
  text-transform: none !important;
  white-space: nowrap !important;
}

/**
 * For the initial alpha version, we're hardcoding in the various unique icon styles.
 *
 * Next version, we want to dynamically generate these from legacy SLDS with the
 * following design pattern:
 *
 * [type="action"][icon-name="approval"] {
 *   --sds-c-icon-color-background: var(--slds-c-icon-color-background, #111);
 * }
 */

:host([data-render-mode="shadow"]) .slds-icon_disabled {
  background-color: currentcolor;
}

:host([data-render-mode="shadow"]) .slds-input__icon {
  --slds-c-icon-sizing: calc(var(--sds-g-sizing-1, 0.125rem) + var(--sds-g-sizing-4, 0.75rem));

  position: absolute;
  top: 50%;
  margin-block-start: -0.4375rem;
  line-height: var(--sds-g-font-lineheight-1, 1);
  border: 0;
  z-index: 2;
}

/* Copyright (c) 2015-present, salesforce.com, inc. All rights reserved
  Licensed under BSD 3-Clause - see LICENSE.txt or git.io/sfdc-license */

@supports (--styling-hooks: '') {
  :host([data-render-mode="shadow"]) {
    /* button text */
    --slds-c-button-neutral-text-color: var(--slds-c-buttonstateful-text-color);
    --slds-c-button-neutral-text-color-hover: var(--slds-c-buttonstateful-text-color-hover);
    --slds-c-button-neutral-text-color-focus: var(--slds-c-buttonstateful-text-color-focus);
    --slds-c-button-neutral-text-color-active: var(--slds-c-buttonstateful-text-color-active);

    /* button background */
    --slds-c-button-neutral-color-background: var(--slds-c-buttonstateful-color-background);
    --slds-c-button-neutral-color-background-hover: var(--slds-c-buttonstateful-color-background-hover);
    --slds-c-button-neutral-color-background-active: var(--slds-c-buttonstateful-color-background-active);
    --slds-c-button-neutral-color-background-focus: var(
      --slds-c-buttonstateful-color-background-focus,
      var(--sds-g-color-neutral-base-95, #f3f3f3)
    );

    /* button border */
    --slds-c-button-neutral-color-border: var(--slds-c-buttonstateful-color-border);
    --slds-c-button-neutral-color-border-hover: var(--slds-c-buttonstateful-color-border-hover);
    --slds-c-button-neutral-color-border-active: var(
      --slds-c-buttonstateful-color-border-active,
      transparent
    );
    --slds-c-button-neutral-color-border-focus: var(
      --slds-c-buttonstateful-color-border-focus,
      var(--slds-c-buttonstateful-color-border-hover, var(--slds-c-buttonstateful-color-border-hover))
    );

    /* button box shadow on focus */
    --slds-c-button-neutral-shadow-focus: var(
      --slds-c-buttonstateful-shadow-focus,
      var(--sds-g-color-brand-base-50, #0176d3) 0 0 3px
    );
  }

  /* vertical alignment for icon and text */
  :host([data-render-mode="shadow"]) .slds-text-not-selected,:host([data-render-mode="shadow"]) 
  .slds-text-selected,:host([data-render-mode="shadow"]) 
  .slds-text-selected-focus {
    display: contents;
  }

  /* not selected: */
  :host([data-render-mode="shadow"]) .slds-not-selected .slds-text-selected,:host([data-render-mode="shadow"]) 
  .slds-not-selected .slds-text-selected-focus {
    display: none;
  }

  /* selected focus */
  :host([data-render-mode="shadow"]) .slds-is-selected-clicked .slds-text-not-selected,:host([data-render-mode="shadow"]) 
  .slds-is-selected-clicked .slds-text-selected-focus {
    display: none;
  }

  /* selected but not active */
  :host([data-render-mode="shadow"]) .slds-is-selected .slds-text-not-selected,:host([data-render-mode="shadow"]) 
  .slds-is-selected .slds-text-selected-focus {
    display: none;
  }

  /* selected + hover/focus: remove selected text */
  :host([data-render-mode="shadow"]) .slds-is-selected:hover .slds-text-selected,:host([data-render-mode="shadow"]) 
  .slds-is-selected:focus .slds-text-selected {
    display: none;
  }

  /* selected + hover: show hover/focus text */
  :host([data-render-mode="shadow"]) .slds-is-selected:hover .slds-text-selected-focus,:host([data-render-mode="shadow"]) 
  .slds-is-selected:focus .slds-text-selected-focus {
    display: contents;
  }

  :host([data-render-mode="shadow"]) .slds-is-selected:not(:hover) {
    border-color: transparent;
  }
}
