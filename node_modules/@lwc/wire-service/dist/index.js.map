{"version":3,"file":"index.js","sources":["../../shared/dist/index.js","../src/value-changed-event.ts","../src/index.ts"],"sourcesContent":["/**\n * Copyright (C) 2023 salesforce.com, inc.\n */\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nfunction invariant(value, msg) {\n    if (!value) {\n        throw new Error(`Invariant Violation: ${msg}`);\n    }\n}\nfunction isTrue$1(value, msg) {\n    if (!value) {\n        throw new Error(`Assert Violation: ${msg}`);\n    }\n}\nfunction isFalse$1(value, msg) {\n    if (value) {\n        throw new Error(`Assert Violation: ${msg}`);\n    }\n}\nfunction fail(msg) {\n    throw new Error(msg);\n}\n\nvar assert = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    fail: fail,\n    invariant: invariant,\n    isFalse: isFalse$1,\n    isTrue: isTrue$1\n});\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst { assign, create, defineProperties, defineProperty, freeze, getOwnPropertyDescriptor, getOwnPropertyNames, getPrototypeOf, hasOwnProperty, isFrozen, keys, seal, setPrototypeOf, } = Object;\nconst { isArray } = Array;\nconst { concat: ArrayConcat, copyWithin: ArrayCopyWithin, every: ArrayEvery, fill: ArrayFill, filter: ArrayFilter, find: ArrayFind, findIndex: ArrayFindIndex, includes: ArrayIncludes, indexOf: ArrayIndexOf, join: ArrayJoin, map: ArrayMap, pop: ArrayPop, push: ArrayPush, reduce: ArrayReduce, reverse: ArrayReverse, shift: ArrayShift, slice: ArraySlice, some: ArraySome, sort: ArraySort, splice: ArraySplice, unshift: ArrayUnshift, forEach, } = Array.prototype;\n// The type of the return value of Array.prototype.every is `this is T[]`. However, once this\n// Array method is pulled out of the prototype, the function is now referencing `this` where\n// `this` is meaningless, resulting in a TypeScript compilation error.\n//\n// Exposing this helper function is the closest we can get to preserving the usage patterns\n// of Array.prototype methods used elsewhere in the codebase.\nfunction arrayEvery(arr, predicate) {\n    return ArrayEvery.call(arr, predicate);\n}\nconst { fromCharCode: StringFromCharCode } = String;\nconst { charCodeAt: StringCharCodeAt, replace: StringReplace, split: StringSplit, slice: StringSlice, toLowerCase: StringToLowerCase, } = String.prototype;\nfunction isUndefined(obj) {\n    return obj === undefined;\n}\nfunction isNull(obj) {\n    return obj === null;\n}\nfunction isTrue(obj) {\n    return obj === true;\n}\nfunction isFalse(obj) {\n    return obj === false;\n}\nfunction isBoolean(obj) {\n    return typeof obj === 'boolean';\n}\nfunction isFunction(obj) {\n    return typeof obj === 'function';\n}\nfunction isObject(obj) {\n    return typeof obj === 'object';\n}\nfunction isString(obj) {\n    return typeof obj === 'string';\n}\nfunction isNumber(obj) {\n    return typeof obj === 'number';\n}\nfunction noop() {\n    /* Do nothing */\n}\nconst OtS = {}.toString;\nfunction toString(obj) {\n    if (obj && obj.toString) {\n        // Arrays might hold objects with \"null\" prototype So using\n        // Array.prototype.toString directly will cause an error Iterate through\n        // all the items and handle individually.\n        if (isArray(obj)) {\n            return ArrayJoin.call(ArrayMap.call(obj, toString), ',');\n        }\n        return obj.toString();\n    }\n    else if (typeof obj === 'object') {\n        return OtS.call(obj);\n    }\n    else {\n        return obj + '';\n    }\n}\nfunction getPropertyDescriptor(o, p) {\n    do {\n        const d = getOwnPropertyDescriptor(o, p);\n        if (!isUndefined(d)) {\n            return d;\n        }\n        o = getPrototypeOf(o);\n    } while (o !== null);\n}\n\n/*\n * Copyright (c) 2023, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n// These must be updated when the enum is updated.\n// It's a bit annoying to do have to do this manually, but this makes the file tree-shakeable,\n// passing the `verify-treeshakeable.js` test.\nconst LOWEST_API_VERSION = 58 /* APIVersion.V58_244_SUMMER_23 */;\nconst HIGHEST_API_VERSION = 59 /* APIVersion.V59_246_WINTER_24 */;\nconst allVersions = [58 /* APIVersion.V58_244_SUMMER_23 */, 59 /* APIVersion.V59_246_WINTER_24 */];\nconst allVersionsSet = /*@__PURE__@*/ new Set(allVersions);\nfunction getAPIVersionFromNumber(version) {\n    if (!isNumber(version)) {\n        // if version is unspecified, default to latest\n        return HIGHEST_API_VERSION;\n    }\n    if (allVersionsSet.has(version)) {\n        return version;\n    }\n    if (version < LOWEST_API_VERSION) {\n        return LOWEST_API_VERSION;\n    }\n    // If it's a number, and it's within the bounds of our known versions, then we should find the\n    // highest version lower than the requested number.\n    // For instance, if we know about versions 1, 2, 5, and 6, and the user requests 3, then we should return 2.\n    for (let i = 1; i < allVersions.length; i++) {\n        if (allVersions[i] > version) {\n            return allVersions[i - 1];\n        }\n    }\n    // version > HIGHEST_API_VERSION, so fall back to highest\n    return HIGHEST_API_VERSION;\n}\nfunction isAPIFeatureEnabled(apiVersionFeature, apiVersion) {\n    switch (apiVersionFeature) {\n        case 0 /* APIFeature.LOWERCASE_SCOPE_TOKENS */:\n        case 1 /* APIFeature.TREAT_ALL_PARSE5_ERRORS_AS_ERRORS */:\n            return apiVersion >= 59 /* APIVersion.V59_246_WINTER_24 */;\n    }\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n/**\n * According to the following list, there are 48 aria attributes of which two (ariaDropEffect and\n * ariaGrabbed) are deprecated:\n * https://www.w3.org/TR/wai-aria-1.1/#x6-6-definitions-of-states-and-properties-all-aria-attributes\n *\n * The above list of 46 aria attributes is consistent with the following resources:\n * https://github.com/w3c/aria/pull/708/files#diff-eacf331f0ffc35d4b482f1d15a887d3bR11060\n * https://wicg.github.io/aom/spec/aria-reflection.html\n *\n * NOTE: If you update this list, please update test files that implicitly reference this list!\n * Searching the codebase for `aria-flowto` and `ariaFlowTo` should be good enough to find all usages.\n */\nconst AriaPropertyNames = [\n    'ariaActiveDescendant',\n    'ariaAtomic',\n    'ariaAutoComplete',\n    'ariaBusy',\n    'ariaChecked',\n    'ariaColCount',\n    'ariaColIndex',\n    'ariaColSpan',\n    'ariaControls',\n    'ariaCurrent',\n    'ariaDescribedBy',\n    'ariaDetails',\n    'ariaDisabled',\n    'ariaErrorMessage',\n    'ariaExpanded',\n    'ariaFlowTo',\n    'ariaHasPopup',\n    'ariaHidden',\n    'ariaInvalid',\n    'ariaKeyShortcuts',\n    'ariaLabel',\n    'ariaLabelledBy',\n    'ariaLevel',\n    'ariaLive',\n    'ariaModal',\n    'ariaMultiLine',\n    'ariaMultiSelectable',\n    'ariaOrientation',\n    'ariaOwns',\n    'ariaPlaceholder',\n    'ariaPosInSet',\n    'ariaPressed',\n    'ariaReadOnly',\n    'ariaRelevant',\n    'ariaRequired',\n    'ariaRoleDescription',\n    'ariaRowCount',\n    'ariaRowIndex',\n    'ariaRowSpan',\n    'ariaSelected',\n    'ariaSetSize',\n    'ariaSort',\n    'ariaValueMax',\n    'ariaValueMin',\n    'ariaValueNow',\n    'ariaValueText',\n    'role',\n];\nconst { AriaAttrNameToPropNameMap, AriaPropNameToAttrNameMap } = /*@__PURE__*/ (() => {\n    const AriaAttrNameToPropNameMap = create(null);\n    const AriaPropNameToAttrNameMap = create(null);\n    // Synthetic creation of all AOM property descriptors for Custom Elements\n    forEach.call(AriaPropertyNames, (propName) => {\n        const attrName = StringToLowerCase.call(StringReplace.call(propName, /^aria/, () => 'aria-'));\n        AriaAttrNameToPropNameMap[attrName] = propName;\n        AriaPropNameToAttrNameMap[propName] = attrName;\n    });\n    return { AriaAttrNameToPropNameMap, AriaPropNameToAttrNameMap };\n})();\nfunction isAriaAttribute(attrName) {\n    return attrName in AriaAttrNameToPropNameMap;\n}\n// These attributes take either an ID or a list of IDs as values.\n// This includes aria-* attributes as well as the special non-ARIA \"for\" attribute\nconst ID_REFERENCING_ATTRIBUTES_SET = /*@__PURE__*/ new Set([\n    'aria-activedescendant',\n    'aria-controls',\n    'aria-describedby',\n    'aria-details',\n    'aria-errormessage',\n    'aria-flowto',\n    'aria-labelledby',\n    'aria-owns',\n    'for',\n]);\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n// See browser support for globalThis:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/globalThis#browser_compatibility\n/* istanbul ignore next */\n// @ts-ignore\nconst _globalThis = typeof globalThis === 'object' ? globalThis : window;\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst KEY__IS_NATIVE_SHADOW_ROOT_DEFINED = '$isNativeShadowRootDefined$';\nconst KEY__SHADOW_RESOLVER = '$shadowResolver$';\nconst KEY__SHADOW_RESOLVER_PRIVATE = '$$ShadowResolverKey$$';\nconst KEY__SHADOW_STATIC = '$shadowStaticNode$';\nconst KEY__SHADOW_STATIC_PRIVATE = '$shadowStaticNodeKey$';\nconst KEY__SHADOW_TOKEN = '$shadowToken$';\nconst KEY__SHADOW_TOKEN_PRIVATE = '$$ShadowTokenKey$$';\nconst KEY__SYNTHETIC_MODE = '$$lwc-synthetic-mode';\nconst KEY__SCOPED_CSS = '$scoped$';\nconst KEY__NATIVE_GET_ELEMENT_BY_ID = '$nativeGetElementById$';\nconst KEY__NATIVE_QUERY_SELECTOR_ALL = '$nativeQuerySelectorAll$';\n\n/*\n * Copyright (c) 2022, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\nconst XML_NAMESPACE = 'http://www.w3.org/XML/1998/namespace';\nconst SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\nconst MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\nconst XLINK_NAMESPACE = 'http://www.w3.org/1999/xlink';\n\n/*\n * Copyright (c) 2020, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n// Void elements are elements that self-close even without an explicit solidus (slash),\n// e.g. `</tagName>` or `<tagName />`. For instance, `<meta>` closes on its own; no need for a slash.\n// These only come from HTML; there are no void elements in the SVG or MathML namespaces.\n// See: https://html.spec.whatwg.org/multipage/syntax.html#syntax-tags\nconst VOID_ELEMENTS =  [\n    'area',\n    'base',\n    'br',\n    'col',\n    'embed',\n    'hr',\n    'img',\n    'input',\n    'link',\n    'meta',\n    'source',\n    'track',\n    'wbr',\n];\n// These elements have been deprecated but preserving their usage for backwards compatibility\n// until we can officially deprecate them from LWC.\n// See: https://html.spec.whatwg.org/multipage/obsolete.html#obsolete-but-conforming-features\nconst DEPRECATED_VOID_ELEMENTS =  ['param', 'keygen', 'menuitem'];\nconst VOID_ELEMENTS_SET = /*@__PURE__*/ new Set([...VOID_ELEMENTS, ...DEPRECATED_VOID_ELEMENTS]);\nfunction isVoidElement(name, namespace) {\n    return namespace === HTML_NAMESPACE && VOID_ELEMENTS_SET.has(name.toLowerCase());\n}\n\n/*\n * Copyright (c) 2020, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst CAMEL_REGEX = /-([a-z])/g;\n/**\n * Maps boolean attribute name to supported tags: 'boolean attr name' => Set of allowed tag names\n * that supports them.\n */\nconst BOOLEAN_ATTRIBUTES = /*@__PURE__@*/ new Map([\n    ['autofocus', /*@__PURE__@*/ new Set(['button', 'input', 'keygen', 'select', 'textarea'])],\n    ['autoplay', /*@__PURE__@*/ new Set(['audio', 'video'])],\n    ['checked', /*@__PURE__@*/ new Set(['command', 'input'])],\n    [\n        'disabled',\n        /*@__PURE__@*/ new Set([\n            'button',\n            'command',\n            'fieldset',\n            'input',\n            'keygen',\n            'optgroup',\n            'select',\n            'textarea',\n        ]),\n    ],\n    ['formnovalidate', /*@__PURE__@*/ new Set(['button'])],\n    ['hidden', /*@__PURE__@*/ new Set()],\n    ['loop', /*@__PURE__@*/ new Set(['audio', 'bgsound', 'marquee', 'video'])],\n    ['multiple', /*@__PURE__@*/ new Set(['input', 'select'])],\n    ['muted', /*@__PURE__@*/ new Set(['audio', 'video'])],\n    ['novalidate', /*@__PURE__@*/ new Set(['form'])],\n    ['open', /*@__PURE__@*/ new Set(['details'])],\n    ['readonly', /*@__PURE__@*/ new Set(['input', 'textarea'])],\n    ['readonly', /*@__PURE__@*/ new Set(['input', 'textarea'])],\n    ['required', /*@__PURE__@*/ new Set(['input', 'select', 'textarea'])],\n    ['reversed', /*@__PURE__@*/ new Set(['ol'])],\n    ['selected', /*@__PURE__@*/ new Set(['option'])],\n]);\nfunction isBooleanAttribute(attrName, tagName) {\n    const allowedTagNames = BOOLEAN_ATTRIBUTES.get(attrName);\n    return (allowedTagNames !== undefined &&\n        (allowedTagNames.size === 0 || allowedTagNames.has(tagName)));\n}\n// This list is based on https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\nconst GLOBAL_ATTRIBUTE = /*@__PURE__*/ new Set([\n    'accesskey',\n    'autocapitalize',\n    'autofocus',\n    'class',\n    'contenteditable',\n    'contextmenu',\n    'dir',\n    'draggable',\n    'enterkeyhint',\n    'exportparts',\n    'hidden',\n    'id',\n    'inputmode',\n    'is',\n    'itemid',\n    'itemprop',\n    'itemref',\n    'itemscope',\n    'itemtype',\n    'lang',\n    'nonce',\n    'part',\n    'slot',\n    'spellcheck',\n    'style',\n    'tabindex',\n    'title',\n    'translate',\n]);\nfunction isGlobalHtmlAttribute(attrName) {\n    return GLOBAL_ATTRIBUTE.has(attrName);\n}\n// These are HTML standard prop/attribute IDL mappings, but are not predictable based on camel/kebab-case conversion\nconst SPECIAL_PROPERTY_ATTRIBUTE_MAPPING = /*@__PURE__@*/ new Map([\n    ['accessKey', 'accesskey'],\n    ['readOnly', 'readonly'],\n    ['tabIndex', 'tabindex'],\n    ['bgColor', 'bgcolor'],\n    ['colSpan', 'colspan'],\n    ['rowSpan', 'rowspan'],\n    ['contentEditable', 'contenteditable'],\n    ['crossOrigin', 'crossorigin'],\n    ['dateTime', 'datetime'],\n    ['formAction', 'formaction'],\n    ['isMap', 'ismap'],\n    ['maxLength', 'maxlength'],\n    ['minLength', 'minlength'],\n    ['noValidate', 'novalidate'],\n    ['useMap', 'usemap'],\n    ['htmlFor', 'for'],\n]);\n/**\n * Map associating previously transformed HTML property into HTML attribute.\n */\nconst CACHED_PROPERTY_ATTRIBUTE_MAPPING = /*@__PURE__@*/ new Map();\nfunction htmlPropertyToAttribute(propName) {\n    const ariaAttributeName = AriaPropNameToAttrNameMap[propName];\n    if (!isUndefined(ariaAttributeName)) {\n        return ariaAttributeName;\n    }\n    const specialAttributeName = SPECIAL_PROPERTY_ATTRIBUTE_MAPPING.get(propName);\n    if (!isUndefined(specialAttributeName)) {\n        return specialAttributeName;\n    }\n    const cachedAttributeName = CACHED_PROPERTY_ATTRIBUTE_MAPPING.get(propName);\n    if (!isUndefined(cachedAttributeName)) {\n        return cachedAttributeName;\n    }\n    let attributeName = '';\n    for (let i = 0, len = propName.length; i < len; i++) {\n        const code = StringCharCodeAt.call(propName, i);\n        if (code >= 65 && // \"A\"\n            code <= 90 // \"Z\"\n        ) {\n            attributeName += '-' + StringFromCharCode(code + 32);\n        }\n        else {\n            attributeName += StringFromCharCode(code);\n        }\n    }\n    CACHED_PROPERTY_ATTRIBUTE_MAPPING.set(propName, attributeName);\n    return attributeName;\n}\n/**\n * Map associating previously transformed kabab-case attributes into camel-case props.\n */\nconst CACHED_KEBAB_CAMEL_MAPPING = /*@__PURE__@*/ new Map();\nfunction kebabCaseToCamelCase(attrName) {\n    let result = CACHED_KEBAB_CAMEL_MAPPING.get(attrName);\n    if (isUndefined(result)) {\n        result = StringReplace.call(attrName, CAMEL_REGEX, (g) => g[1].toUpperCase());\n        CACHED_KEBAB_CAMEL_MAPPING.set(attrName, result);\n    }\n    return result;\n}\n\n/*\n * Copyright (c) 2020, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst ESCAPED_CHARS = {\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '&': '&amp;',\n};\nfunction htmlEscape(str, attrMode = false) {\n    const searchValue = attrMode ? /[\"&]/g : /[\"'<>&]/g;\n    return str.replace(searchValue, (char) => ESCAPED_CHARS[char]);\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n// We use this to detect symbol support in order to avoid the expensive symbol polyfill. Note that\n// we can't use typeof since it will fail when transpiling.\nconst hasNativeSymbolSupport = /*@__PURE__*/ (() => Symbol('x').toString() === 'Symbol(x)')();\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n// Increment whenever the LWC template compiler changes\nconst LWC_VERSION = \"3.0.0\";\nconst LWC_VERSION_COMMENT = `LWC compiler v${LWC_VERSION}`;\nconst LWC_VERSION_COMMENT_REGEX = /\\/\\*LWC compiler v([\\d.]+)\\*\\/\\s*}/;\n\nexport { AriaAttrNameToPropNameMap, AriaPropNameToAttrNameMap, ArrayConcat, ArrayCopyWithin, ArrayFill, ArrayFilter, ArrayFind, ArrayFindIndex, ArrayIncludes, ArrayIndexOf, ArrayJoin, ArrayMap, ArrayPop, ArrayPush, ArrayReduce, ArrayReverse, ArrayShift, ArraySlice, ArraySome, ArraySort, ArraySplice, ArrayUnshift, HIGHEST_API_VERSION, HTML_NAMESPACE, ID_REFERENCING_ATTRIBUTES_SET, KEY__IS_NATIVE_SHADOW_ROOT_DEFINED, KEY__NATIVE_GET_ELEMENT_BY_ID, KEY__NATIVE_QUERY_SELECTOR_ALL, KEY__SCOPED_CSS, KEY__SHADOW_RESOLVER, KEY__SHADOW_RESOLVER_PRIVATE, KEY__SHADOW_STATIC, KEY__SHADOW_STATIC_PRIVATE, KEY__SHADOW_TOKEN, KEY__SHADOW_TOKEN_PRIVATE, KEY__SYNTHETIC_MODE, LOWEST_API_VERSION, LWC_VERSION, LWC_VERSION_COMMENT, LWC_VERSION_COMMENT_REGEX, MATHML_NAMESPACE, SVG_NAMESPACE, StringCharCodeAt, StringFromCharCode, StringReplace, StringSlice, StringSplit, StringToLowerCase, XLINK_NAMESPACE, XML_NAMESPACE, arrayEvery, assert, assign, create, defineProperties, defineProperty, forEach, freeze, getAPIVersionFromNumber, getOwnPropertyDescriptor, getOwnPropertyNames, getPropertyDescriptor, getPrototypeOf, _globalThis as globalThis, hasNativeSymbolSupport, hasOwnProperty, htmlEscape, htmlPropertyToAttribute, isAPIFeatureEnabled, isAriaAttribute, isArray, isBoolean, isBooleanAttribute, isFalse, isFrozen, isFunction, isGlobalHtmlAttribute, isNull, isNumber, isObject, isString, isTrue, isUndefined, isVoidElement, kebabCaseToCamelCase, keys, noop, seal, setPrototypeOf, toString };\n/** version: 3.0.0 */\n//# sourceMappingURL=index.js.map\n",null,null],"names":[],"mappings":"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"}