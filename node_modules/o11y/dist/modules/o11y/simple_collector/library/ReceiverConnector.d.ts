import { Communicator } from '../interfaces';
import { SenderLogMessage, SenderMetricsMessage } from '../interfaces-private';
export declare const MESSAGE_FROM_RECEIVER = "o11y:receiver";
export type LogCallback = (log: SenderLogMessage) => void;
export type MetricsCallback = (metric: SenderMetricsMessage) => void;
export type CommErrorInfo = {
    data: unknown;
};
export type CommErrorCallback = () => void;
export declare class ReceiverConnector {
    private readonly _logCallback;
    private readonly _metricsCallback;
    private readonly _commErrorCallback;
    private _senders;
    constructor(_logCallback: LogCallback, _metricsCallback: MetricsCallback, _commErrorCallback: CommErrorCallback);
    openComms(sender: Communicator): void;
    closeComms(sender: Communicator): void;
    private _messagePortEventHandler;
    private _messagePortErrorHandler;
}
