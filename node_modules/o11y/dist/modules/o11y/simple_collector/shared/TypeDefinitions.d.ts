import { IEnum, IExtensionField, IExtensionMapField, INamespace, IService, IType } from '../interfaces';
export type SchematizedDataValue = any;
export type SchematizedData = {
    [k: string]: SchematizedDataValue;
};
export declare type LightningElement = {
    readonly template: {
        readonly host: HTMLElement;
    };
};
export type MetricsTags = Record<string, number | string | boolean>;
export type LogPromptListener = (reason?: string) => unknown;
export type ProtoOptions = {
    [k: string]: any;
};
type AnyExtensionField = IExtensionField | IExtensionMapField;
export type AnyNestedObject = IEnum | IType | IService | AnyExtensionField | INamespace;
export type PbjsNestedObjectDescriptor = {
    [k: string]: AnyNestedObject;
};
export type ObjectType = Record<string | number | symbol, unknown>;
export type TraceHeaders = Record<string, string>;
export {};
