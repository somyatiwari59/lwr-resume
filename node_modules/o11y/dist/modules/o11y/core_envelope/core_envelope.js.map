{"version":3,"file":"core_envelope.js","sources":["../../../../../../node_modules/o11y_schema/version/version.js","../../../../src/core_envelope/CoreEnvelopeBuilder.ts"],"sourcesContent":["export const version='246.17.0'","import { metricsUtility, schemaUtil, utility } from 'o11y/shared';\nimport { version as schemaVersion } from 'o11y_schema/version';\nimport { BucketMetric, Metric, Schema } from '../interfaces';\nimport {\n    BucketHistogram,\n    CoreEnvelope,\n    CoreEnvelopeContents,\n    LogMessage,\n    MessageBundle,\n    StaticAttributes,\n    UpCounter,\n    ValueRecorder\n} from './interfaces';\n\nexport const coreEnvelopeKey = 'o11y';\nexport class CoreEnvelopeBuilder {\n    private _envelope: CoreEnvelope;\n\n    constructor() {\n        this._envelope = {\n            diagnostics: {\n                key: coreEnvelopeKey,\n                generatedTimestamp: undefined,\n                bundleCount: 0,\n                bucketHistogramCount: 0,\n                upCounterCount: 0,\n                valueRecorderCount: 0,\n                schemaVersion\n            },\n            bundles: [] as MessageBundle[],\n            metrics: {\n                bucketHistograms: [] as BucketHistogram[],\n                upCounters: [] as UpCounter[],\n                valueRecorders: [] as ValueRecorder[]\n            },\n            staticAttributes: {}\n        };\n    }\n\n    withStaticAttributes(staticAttributes: StaticAttributes): CoreEnvelopeBuilder {\n        this._envelope.staticAttributes = staticAttributes;\n        return this;\n    }\n\n    withLogs(schemaName: string, logs: LogMessage[]): CoreEnvelopeBuilder {\n        let msgBundle: MessageBundle = this._envelope.bundles.find(\n            (bundle) => bundle.schemaName === schemaName\n        );\n\n        if (msgBundle) {\n            for (const log of logs) {\n                msgBundle.messages.push(log);\n            }\n        } else {\n            msgBundle = {\n                schemaName: schemaName,\n                messages: logs\n            };\n            this._envelope.bundles.push(msgBundle);\n        }\n        this._envelope.diagnostics.bundleCount = this._envelope.bundles.length;\n        return this;\n    }\n\n    static getUpCounters(metrics: Metric<number>[], reset = true): UpCounter[] {\n        return metricsUtility.getUpCounters(metrics, reset);\n    }\n\n    static getValueRecorders(metrics: Metric<number[]>[], reset = true): ValueRecorder[] {\n        return metricsUtility.getValueRecorders(metrics, reset);\n    }\n\n    static getBucketHistograms(metrics: BucketMetric<number[]>[], reset = true): BucketHistogram[] {\n        return metricsUtility.getBucketHistograms(metrics, reset);\n    }\n\n    withUpCounters(upCounters: UpCounter[]): CoreEnvelopeBuilder {\n        for (const upCounter of upCounters) {\n            this._envelope.metrics.upCounters.push(upCounter);\n        }\n        this._envelope.diagnostics.upCounterCount = this._envelope.metrics.upCounters.length;\n        return this;\n    }\n\n    withValueRecorders(valueRecorders: ValueRecorder[]): CoreEnvelopeBuilder {\n        for (const valueRecorder of valueRecorders) {\n            this._envelope.metrics.valueRecorders.push(valueRecorder);\n        }\n        this._envelope.diagnostics.valueRecorderCount =\n            this._envelope.metrics.valueRecorders.length;\n        return this;\n    }\n\n    withBucketHistograms(bucketHistograms: BucketHistogram[]): CoreEnvelopeBuilder {\n        for (const bucketHistogram of bucketHistograms) {\n            this._envelope.metrics.bucketHistograms.push(bucketHistogram);\n        }\n        this._envelope.diagnostics.bucketHistogramCount =\n            this._envelope.metrics.bucketHistograms.length;\n        return this;\n    }\n\n    build(): CoreEnvelope {\n        this._envelope.diagnostics.generatedTimestamp = utility.time().tsNow;\n        return this._envelope;\n    }\n\n    static buildFrom(contents: CoreEnvelopeContents): CoreEnvelope {\n        const builder = new CoreEnvelopeBuilder();\n\n        if (contents.staticAttributes) {\n            builder.withStaticAttributes(contents.staticAttributes);\n        }\n        if (contents.messages) {\n            contents.messages.forEach((logs: LogMessage[], schema: Schema) => {\n                builder.withLogs(schemaUtil.getSchemaId(schema), logs);\n            });\n        }\n        if (contents.upCounters) {\n            builder.withUpCounters(contents.upCounters);\n        }\n        if (contents.valueRecorders) {\n            builder.withValueRecorders(contents.valueRecorders);\n        }\n        if (contents.bucketHistograms) {\n            builder.withBucketHistograms(contents.bucketHistograms);\n        }\n\n        return builder.build();\n    }\n}\n"],"names":["schemaVersion"],"mappings":"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"}