import { AllowedOrigins, Communicator } from '../interfaces';
import { SenderLogMessage, SenderMetricsMessage } from '../interfaces-private';
export declare const MESSAGE_FROM_SENDER = "o11y:sender";
export declare const MESSAGE_TYPE_HANDSHAKE = "handshake";
export declare const MESSAGE_TYPE_LOG = "log";
export declare const MESSAGE_TYPE_METRICS = "metrics";
export type HandshakeData = {
    from: string;
    type: string;
};
export type MessageChannelData = {
    type: string;
    data: SenderLogMessage | SenderMetricsMessage;
};
export declare class SenderConnector {
    private readonly _self;
    private readonly _allowedOrigins?;
    private readonly _messageEventHandlerFunc;
    private _otherPort;
    private _handshakeComplete;
    private _logBuffer;
    private _metricsBuffer;
    constructor(_self: Communicator, _allowedOrigins?: AllowedOrigins);
    private _messageEventHandler;
    sendLog(log: SenderLogMessage): void;
    sendMetrics(metrics: SenderMetricsMessage): void;
    private _emptyBuffers;
}
