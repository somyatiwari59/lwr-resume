import type { RuntimeContext, RuntimeEnvironment, Headers, MiddlewareRequest, NormalizedLwrGlobalConfig } from '@lwrjs/types';
export declare abstract class AbstractMiddlewareRequest implements MiddlewareRequest {
    isSiteGenerationRequest: boolean;
    constructor(isSiteGenerationRequest?: boolean);
    abstract originalUrl: string;
    abstract path: string;
    abstract body: any;
    abstract method: string;
    abstract protocol: string;
    abstract params: any;
    abstract query: any;
    abstract locale: string;
    abstract headers: Headers;
    abstract acceptsLanguages(): string[];
    abstract get(field: string): string | undefined;
    cookie(key: string): string | undefined;
    isSiteGeneration(): boolean;
    hasJsonParam(): boolean;
    isJsonRequest(): boolean;
    validateJsonRequest(): boolean;
    validateEnvironmentRequest(config: NormalizedLwrGlobalConfig): boolean;
    getRuntimeContext(defaultRuntimeEnvironment: RuntimeEnvironment): RuntimeContext;
}
//# sourceMappingURL=abstract-request.d.ts.map