export var AssetSpan;
(function (AssetSpan) {
    AssetSpan["GetAsset"] = "lwr.getAsset";
})(AssetSpan || (AssetSpan = {}));
export var ConfigSpan;
(function (ConfigSpan) {
    ConfigSpan["LoadConfig"] = "lwr.config.loadConfig";
    ConfigSpan["ExecuteConfigHooks"] = "lwr.config.executeConfigHooks";
    ConfigSpan["ExecuteStartHooks"] = "lwr.config.executeStartHooks";
    ConfigSpan["ExecuteInstrHooks"] = "lwr.config.executeInstrHooks";
    ConfigSpan["ResolveConfig"] = "lwr.config.resolveConfig";
    ConfigSpan["ValidateConfig"] = "lwr.config.validateConfig";
})(ConfigSpan || (ConfigSpan = {}));
export var CoreSpan;
(function (CoreSpan) {
    CoreSpan["CreateServer"] = "lwr.core.createServer";
    CoreSpan["CreateServerContext"] = "lwr.core.createServerContext";
    CoreSpan["InitServer"] = "lwr.core.initServer";
    CoreSpan["StartServer"] = "lwr.core.startServer";
})(CoreSpan || (CoreSpan = {}));
export var LambdaSpan;
(function (LambdaSpan) {
    LambdaSpan["CreateHandler"] = "lwr.lambda.createHandler";
    LambdaSpan["CreateServerContext"] = "lwr.lambda.createServerContext";
})(LambdaSpan || (LambdaSpan = {}));
export var MiddlewareSpan;
(function (MiddlewareSpan) {
    MiddlewareSpan["HandleRequest"] = "lwr.middleware.handleRequest";
})(MiddlewareSpan || (MiddlewareSpan = {}));
export var ModuleBundlerSpan;
(function (ModuleBundlerSpan) {
    ModuleBundlerSpan["GetModuleBundle"] = "lwr.getModuleBundle";
})(ModuleBundlerSpan || (ModuleBundlerSpan = {}));
export var ModuleRegistrySpan;
(function (ModuleRegistrySpan) {
    ModuleRegistrySpan["GetModuleEntry"] = "lwr.getModuleEntry";
    ModuleRegistrySpan["GetModule"] = "lwr.getModule";
})(ModuleRegistrySpan || (ModuleRegistrySpan = {}));
export var ResourceSpan;
(function (ResourceSpan) {
    ResourceSpan["GetResource"] = "lwr.getResource";
})(ResourceSpan || (ResourceSpan = {}));
export var ViewSpan;
(function (ViewSpan) {
    ViewSpan["GetView"] = "lwr.view.getView";
    ViewSpan["ExecuteRouteHandler"] = "lwr.view.routeHandler";
    ViewSpan["Render"] = "lwr.view.render";
    ViewSpan["ServerSideRender"] = "lwr.view.ssr";
    ViewSpan["SsrElement"] = "lwr.view.ssrElement";
    ViewSpan["GetPageData"] = "lwr.view.getPageData";
    ViewSpan["RenderComponent"] = "lwr.view.renderComponent";
    ViewSpan["BootstrapView"] = "lwr.view.bootstrap";
})(ViewSpan || (ViewSpan = {}));
export const DefaultSpans = new Set([
    LambdaSpan.CreateHandler,
    ViewSpan.ExecuteRouteHandler,
    ViewSpan.Render,
    ViewSpan.ServerSideRender,
    ViewSpan.GetPageData,
    ViewSpan.RenderComponent,
]);
//# sourceMappingURL=spans.js.map