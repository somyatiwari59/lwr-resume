export declare enum AssetSpan {
    GetAsset = "lwr.getAsset"
}
export declare enum ConfigSpan {
    LoadConfig = "lwr.config.loadConfig",
    ExecuteConfigHooks = "lwr.config.executeConfigHooks",
    ExecuteStartHooks = "lwr.config.executeStartHooks",
    ExecuteInstrHooks = "lwr.config.executeInstrHooks",
    ResolveConfig = "lwr.config.resolveConfig",
    ValidateConfig = "lwr.config.validateConfig"
}
export declare enum CoreSpan {
    CreateServer = "lwr.core.createServer",
    CreateServerContext = "lwr.core.createServerContext",
    InitServer = "lwr.core.initServer",
    StartServer = "lwr.core.startServer"
}
export declare enum LambdaSpan {
    CreateHandler = "lwr.lambda.createHandler",
    CreateServerContext = "lwr.lambda.createServerContext"
}
export declare enum MiddlewareSpan {
    HandleRequest = "lwr.middleware.handleRequest"
}
export declare enum ModuleBundlerSpan {
    GetModuleBundle = "lwr.getModuleBundle"
}
export declare enum ModuleRegistrySpan {
    GetModuleEntry = "lwr.getModuleEntry",
    GetModule = "lwr.getModule"
}
export declare enum ResourceSpan {
    GetResource = "lwr.getResource"
}
export declare enum ViewSpan {
    GetView = "lwr.view.getView",
    ExecuteRouteHandler = "lwr.view.routeHandler",
    Render = "lwr.view.render",
    ServerSideRender = "lwr.view.ssr",
    SsrElement = "lwr.view.ssrElement",
    GetPageData = "lwr.view.getPageData",
    RenderComponent = "lwr.view.renderComponent",
    BootstrapView = "lwr.view.bootstrap"
}
export declare const DefaultSpans: Set<string>;
export type LWRSpan = AssetSpan | ConfigSpan | CoreSpan | LambdaSpan | MiddlewareSpan | ModuleBundlerSpan | ModuleRegistrySpan | ResourceSpan | ViewSpan;
//# sourceMappingURL=spans.d.ts.map