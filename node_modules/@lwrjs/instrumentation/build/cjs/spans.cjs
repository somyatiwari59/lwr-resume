var __defProp = Object.defineProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", {value: true});
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, {get: all[name], enumerable: true});
};

// packages/@lwrjs/instrumentation/src/spans.ts
__markAsModule(exports);
__export(exports, {
  AssetSpan: () => AssetSpan,
  ConfigSpan: () => ConfigSpan,
  CoreSpan: () => CoreSpan,
  DefaultSpans: () => DefaultSpans,
  LambdaSpan: () => LambdaSpan,
  MiddlewareSpan: () => MiddlewareSpan,
  ModuleBundlerSpan: () => ModuleBundlerSpan,
  ModuleRegistrySpan: () => ModuleRegistrySpan,
  ResourceSpan: () => ResourceSpan,
  ViewSpan: () => ViewSpan
});
var AssetSpan;
(function(AssetSpan2) {
  AssetSpan2["GetAsset"] = "lwr.getAsset";
})(AssetSpan || (AssetSpan = {}));
var ConfigSpan;
(function(ConfigSpan2) {
  ConfigSpan2["LoadConfig"] = "lwr.config.loadConfig";
  ConfigSpan2["ExecuteConfigHooks"] = "lwr.config.executeConfigHooks";
  ConfigSpan2["ExecuteStartHooks"] = "lwr.config.executeStartHooks";
  ConfigSpan2["ExecuteInstrHooks"] = "lwr.config.executeInstrHooks";
  ConfigSpan2["ResolveConfig"] = "lwr.config.resolveConfig";
  ConfigSpan2["ValidateConfig"] = "lwr.config.validateConfig";
})(ConfigSpan || (ConfigSpan = {}));
var CoreSpan;
(function(CoreSpan2) {
  CoreSpan2["CreateServer"] = "lwr.core.createServer";
  CoreSpan2["CreateServerContext"] = "lwr.core.createServerContext";
  CoreSpan2["InitServer"] = "lwr.core.initServer";
  CoreSpan2["StartServer"] = "lwr.core.startServer";
})(CoreSpan || (CoreSpan = {}));
var LambdaSpan;
(function(LambdaSpan2) {
  LambdaSpan2["CreateHandler"] = "lwr.lambda.createHandler";
  LambdaSpan2["CreateServerContext"] = "lwr.lambda.createServerContext";
})(LambdaSpan || (LambdaSpan = {}));
var MiddlewareSpan;
(function(MiddlewareSpan2) {
  MiddlewareSpan2["HandleRequest"] = "lwr.middleware.handleRequest";
})(MiddlewareSpan || (MiddlewareSpan = {}));
var ModuleBundlerSpan;
(function(ModuleBundlerSpan2) {
  ModuleBundlerSpan2["GetModuleBundle"] = "lwr.getModuleBundle";
})(ModuleBundlerSpan || (ModuleBundlerSpan = {}));
var ModuleRegistrySpan;
(function(ModuleRegistrySpan2) {
  ModuleRegistrySpan2["GetModuleEntry"] = "lwr.getModuleEntry";
  ModuleRegistrySpan2["GetModule"] = "lwr.getModule";
})(ModuleRegistrySpan || (ModuleRegistrySpan = {}));
var ResourceSpan;
(function(ResourceSpan2) {
  ResourceSpan2["GetResource"] = "lwr.getResource";
})(ResourceSpan || (ResourceSpan = {}));
var ViewSpan;
(function(ViewSpan2) {
  ViewSpan2["GetView"] = "lwr.view.getView";
  ViewSpan2["ExecuteRouteHandler"] = "lwr.view.routeHandler";
  ViewSpan2["Render"] = "lwr.view.render";
  ViewSpan2["ServerSideRender"] = "lwr.view.ssr";
  ViewSpan2["SsrElement"] = "lwr.view.ssrElement";
  ViewSpan2["GetPageData"] = "lwr.view.getPageData";
  ViewSpan2["RenderComponent"] = "lwr.view.renderComponent";
  ViewSpan2["BootstrapView"] = "lwr.view.bootstrap";
})(ViewSpan || (ViewSpan = {}));
var DefaultSpans = new Set([
  LambdaSpan.CreateHandler,
  ViewSpan.ExecuteRouteHandler,
  ViewSpan.Render,
  ViewSpan.ServerSideRender,
  ViewSpan.GetPageData,
  ViewSpan.RenderComponent
]);
