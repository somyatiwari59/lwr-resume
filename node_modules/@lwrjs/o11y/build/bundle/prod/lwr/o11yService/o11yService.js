import{getInstrumentation as t}from"o11y/client";import{MODULE_DEFINE as e,MODULE_DEFINE_COUNT as r,BOOTSTRAP_END as n,BOOTSTRAP_DURATION as i,MODULE_FETCH as s,MODULE_FETCH_DURATION as a,MAPPINGS_FETCH as o,MAPPINGS_FETCH_DURATION as c,INIT as m,INIT_MODULE as l,ROUTER_NAV as h,ROUTER_VIEW as u,INIT_DURATION as f,INIT_MODULE_DURATION as k,ROUTER_NAV_DURATION as g,ROUTER_VIEW_DURATION as p,BOOTSTRAP_ERROR as b,BOOTSTRAP_ERROR_COUNT as y,INIT_MODULE_COUNT as T,MODULE_FETCH_COUNT as d,MODULE_ERROR as v,MODULE_ERROR_COUNT as E,MAPPINGS_FETCH_COUNT as M,MAPPINGS_ERROR as O,MAPPINGS_ERROR_COUNT as W,ROUTER_NAV_COUNT as w,ROUTER_ERROR as V,ROUTER_ERROR_COUNT as j}from"lwr/metrics";const x=[s,o,m,l,h,u],C={[m]:f,[l]:k,[h]:g,[u]:p},F=Object.keys(C),B={[b]:y,[l]:T,[e]:r,[s]:d,[v]:E,[o]:M,[O]:W,[h]:w,[V]:j},L=Object.keys(B);class P{constructor(t,e){this.config=e||{},this.instrumentation=t}track(){this.trackExistingMarks(),this.setupObserver()}trackExistingMarks(){const t=performance.getEntriesByType("mark").filter((t=>t.name.startsWith(e)));t.length>0&&this.instrumentation.incrementCounter(r,t.length)}setupObserver(){new PerformanceObserver((t=>{t.getEntries().forEach((t=>{const{name:e,duration:r,startTime:m,entryType:l}=t,h=e.split("-")[0];if(e===n&&this.instrumentation.trackValue(i,m),"mark"===l){const e=t.detail||{},r=L.find((t=>t===h));r&&this.instrumentation.incrementCounter(B[r],1,!1,e)}if("measure"===l){const n=t.detail||{};this.config.enableModuleFetchTracking&&e.startsWith(s)&&this.instrumentation.trackValue(a,r,!1,n),this.config.enableMappingFetchTracking&&e.startsWith(o)&&this.instrumentation.trackValue(c,r,!1,n);const i=F.find((t=>t===h));i&&this.instrumentation.trackValue(C[i],r,!1,n)}x.some((t=>e.startsWith(t)))||performance.clearMarks(e)}))})).observe({entryTypes:["mark","measure"]})}}const R=void 0!==globalThis.performance&&"function"==typeof globalThis.performance.mark,q=globalThis.LWR,z={track:()=>{}};function A(e){const r=t("lwrjs"),n=q.metricsConfig||{};(R?new P(r,n):z).track()}export{A as default};
//# sourceMappingURL=o11yService.js.map
