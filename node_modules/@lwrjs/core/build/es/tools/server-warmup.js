import SiteGenerator from './static-generation.js';
import { skipDirCreation } from './utils/dir.js';
import NetworkDispatcher from './utils/network-dispatcher.js';
import { getRuntimeEnvironment } from '@lwrjs/config';
import { logger, WARN, INFO } from '@lwrjs/shared-utils';
export async function warmupServer(config, internalRequestKey) {
    // De-duplicate warming messages if log level is warn or info
    if (!logger.currentLevel || logger.currentLevel == WARN || logger.currentLevel == INFO) {
        logger.setOptions({ dedupe: new Set([WARN]) });
    }
    logger.info('[Server Warmup] starting');
    const { routes, staticSiteGenerator, port, basePath } = config;
    staticSiteGenerator.outputDir = skipDirCreation;
    const urlRewriteMap = new Map();
    const runtimeEnvironment = getRuntimeEnvironment(config);
    // For each locale, generate all the modules
    await new SiteGenerator().generateRoutes(runtimeEnvironment, staticSiteGenerator, routes, basePath, new NetworkDispatcher(port, internalRequestKey), staticSiteGenerator.outputDir, urlRewriteMap);
    logger.info('[Server Warmup] complete');
}
//# sourceMappingURL=server-warmup.js.map