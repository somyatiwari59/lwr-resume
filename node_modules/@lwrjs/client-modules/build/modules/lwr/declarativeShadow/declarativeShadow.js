// Polyfill the Declarative ShadowDOM spec - call this function AFTER the DOM has been parsed and BEFORE hydrateComponent() is invoked
// See https://github.com/salesforce/lwc-rfcs/blob/master/text/0129-declarative-shadow-dom-polyfill.md#single-loop-script-shadow-root-attachment-reference

function applyShadowRoots(node) {
  // if this browser DOES NOT support Declarative ShadowDOM
  node.querySelectorAll('template[shadowroot]').forEach(template => {
    const mode = template.getAttribute('shadowroot') || 'open';
    const shadowRoot = template.parentNode?.attachShadow({
      mode
    });
    shadowRoot.appendChild(template.content);
    template.remove();
    applyShadowRoots(shadowRoot);
  });
}
export function polyfillDeclarativeShadowDom(node = document) {
  // eslint-disable-next-line no-prototype-builtins
  if (!HTMLTemplateElement.prototype.hasOwnProperty('shadowRoot')) {
    // if this browser DOES NOT support Declarative ShadowDOM
    applyShadowRoots(node);
  }
}